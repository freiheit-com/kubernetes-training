## Basics

# Look around fresh cluster
- kubectl get nodes
- kubectl describe node xxx

# deploy service as a single pod
- introduce health toy service
- go through pod.yaml file
- port forward to pod and talk with it
- poison, cure pod => nothing happens, because we did not tell Kubernetes to monitor!

# deploy service with readiness and liveness
=> readiness = when to start directing requests at pod!
=> liveness = still running? kill if not
- go through health-v1-deployment.yaml (liveness/readiness)
- /poison pod
=> and watch behaviour of pod

# deploy service as deployment with replica set
=> api objects 'https://storage.googleapis.com/cdn.thenewstack.io/media/2017/12/3b60b602-picture2mh.png'
- introduce deployment and replica set
- create bare-deployment and watch pods coming up
- port-forward to pod and inspect HOSTNAME
- re-deploy deployment

# deploy exposed service for deployment
- connect to service and watch load-balancing!
- if service type is ClusterIP use kubectl proxy for demo: 'http://localhost:8001/api/v1/namespaces/training/services/health-v1/proxy/health'


## Kubernetes concepts

# limits
- requests (initial)
- limits

# deploy with secret
- health-v1-deployment-with-secret.yaml and

# sealedsecrets
- end up as "normal" Kubernetes sealedsecretes
- can be checked in in repos
- show example from project

# explain in sample cluster:
- config maps (like secrets)

# explain only AutoScale, Daemon, Ingress, Job (CronJob)

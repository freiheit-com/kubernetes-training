## Basics

# Look around fresh cluster
- kubectl get nodes
- kubectl describe node xxx

# deploy service as a single pod
- introduce health toy service
- go through pod.yaml file
- port forward to pod and talk with it
- poison, cure pod => nothing happens, because we did not tell Kubernetes to monitor!

# deploy service with readiness and liveness
=> readiness = when to start directing requests at pod!
=> liveness = still running? kill if not
- go through health-v1-deployment.yaml (liveness/readiness)
- /poison pod
=> and watch behaviour of pod

# deploy service as deployment with replica set
=> api objects 'https://storage.googleapis.com/cdn.thenewstack.io/media/2017/12/3b60b602-picture2mh.png'
- introduce deployment and replica set
- create bare-deployment and watch pods coming up
- port-forward to pod and inspect HOSTNAME
- re-deploy deployment

# explain configmaps, env vars, secrets, volumes
- configmap -> not encrypted, also used for files
- secret -> base64 encoded data
- use in deployments
- volumes -> integration with many cloud resources

# sealedsecrets
- end up as "normal" Kubernetes secrets
- can be checked in in repos
- show example from project

# deploy exposed service for deployment
- expose through ingresser (talk to service from the internet)
- explain ingresser setup

# misc (only briefly explained)
- AutoScale
- Daemon
- Job (CronJob)

# questions
- How does your team deploy to kubernetes? (spinnaker, manually, jenins jobs)
- Which resource does your team use? (replicaset, deployment)
- How does your team manage config?
- Advances: Does your team use istio?


## Kubernetes concepts

# limits
- requests (initial)
- limits

# deploy with secret
- health-v1-deployment-with-secret.yaml and
